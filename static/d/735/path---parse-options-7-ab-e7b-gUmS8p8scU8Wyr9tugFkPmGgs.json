{"data":{"page":{"html":"<h1 id=\"csv-parse-options\"><a href=\"#csv-parse-options\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV Parse options</h1>\n<div class=\"toc\">\n<h2 id=\"table-of-contents\"><a href=\"#table-of-contents\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#toc\" aria-hidden class=\"anchor\"></a>Table of Contents</h2>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li><a href=\"#available-options\">Available options</a></li>\n<li><a href=\"#choose-your-style\">Choose your style</a></li>\n</ul>\n</div>\n<h2 id=\"introduction\"><a href=\"#introduction\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>All options are optional. The options from the <a href=\"https://nodejs.org/api/stream.html#stream_constructor_new_stream_writable_options\">Node.js Stream Writable</a> are also supported and passed as is. Only the \"objectMode\" is overwritten to always equal \"true\".</p>\n<h2 id=\"available-options\"><a href=\"#available-options\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Available options</h2>\n<ul>\n<li><a href=\"/parse/options/cast/\"><code class=\"language-text\">cast</code></a> (boolean|function)<br>\nIf true, the parser will attempt to convert input string to native types. If a function, receive the value as first argument, a context as second argument and return a new value. This option was named <code class=\"language-text\">auto_parse</code> until version 2. More information about the context properties is available below.</li>\n<li><code class=\"language-text\">cast_date</code> (boolean|function)<br>\nIf true, the parser will attempt to convert input string to dates. If a function, receive the value as argument and return a new value. It requires the <code class=\"language-text\">cast</code> option to be active. This option was named <code class=\"language-text\">auto_parse_date</code> until version 2. Be careful, it relies on <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\"><code class=\"language-text\">Date.parse</code></a>.</li>\n<li><a href=\"/parse/options/columns/\"><code class=\"language-text\">columns</code></a> (array|boolean|function)<br>\nGenerate records as object literals instead of arrays. List of fields as an array, a user defined callback accepting the first line and returning the column names, or <code class=\"language-text\">true</code> if auto-discovered in the first CSV line. Defaults to <code class=\"language-text\">null</code>. Affects the result data set in the sense that records will be objects instead of arrays. A value \"false\" \"null\", or \"undefined\" inside the column array skips the column from the output.</li>\n<li><code class=\"language-text\">comment</code> (string|buffer)<br>\nTreat all the characters after this one as a comment; one or multiple characters; disabled by default by defining an empty string <code class=\"language-text\">&#39;&#39;</code>.</li>\n<li><code class=\"language-text\">delimiter</code> (string|Buffer)<br>\nSet the field delimiter. One or multiple character. Defaults to <code class=\"language-text\">&quot;,&quot;</code> (comma).</li>\n<li><code class=\"language-text\">escape</code> (string|Buffer)<br>\nSet the escape character; one character/byte only; only apply to quote and escape characters inside quoted fields; defaults to double quote.</li>\n<li><code class=\"language-text\">from</code> (number)<br>\nStart handling records from the requested number of records.</li>\n<li><code class=\"language-text\">from_line</code> (number)<br>\nStart handling records from the requested line number.</li>\n<li><code class=\"language-text\">info</code> (boolean)<br>\nGenerate two properties <code class=\"language-text\">info</code> and <code class=\"language-text\">record</code> where <code class=\"language-text\">info</code> is a snapshot of the info object at the time the record was created and <code class=\"language-text\">record</code> is the parsed array or object; note, it can be used conjointly with the <code class=\"language-text\">raw</code> option.</li>\n<li><code class=\"language-text\">ltrim</code> (boolean)<br>\nIf <code class=\"language-text\">true</code>, ignore whitespace immediately following the delimiter (i.e. left-trim all fields). Defaults to <code class=\"language-text\">false</code>. Does not remove whitespace in a quoted field.</li>\n<li><code class=\"language-text\">max_record_size</code> (integer)<br>\nMaximum numer of characters to be contained in the field and line buffers before an exception is raised; used to guard against a wrong <code class=\"language-text\">delimiter</code> or <code class=\"language-text\">record_delimiter</code>; a castable string will be converted to an integer; default to 128,000 characters.</li>\n<li><code class=\"language-text\">objname</code> (string|Buffer)<br>\nName of header-record title to name objects by; the string or Buffer value must not be empty and it must match a header value.</li>\n<li><code class=\"language-text\">quote</code> (char|boolean)<br>\nOptional character surrounding a field; one character only; disabled if null, false or empty; defaults to double quote.</li>\n<li><code class=\"language-text\">raw</code> (boolean)<br>\nGenerate two properties <code class=\"language-text\">raw</code> and <code class=\"language-text\">record</code> where <code class=\"language-text\">raw</code> is the original CSV content and <code class=\"language-text\">record</code> is the parsed array or object; note, it can be used conjointly with the <code class=\"language-text\">info</code> option.</li>\n<li><code class=\"language-text\">relax</code> (boolean)<br>\nPreserve quotes inside unquoted field (be warned, it doesn't make coffee).</li>\n<li><a href=\"/parse/options/relax_column_count/\"><code class=\"language-text\">relax_column_count</code></a> (boolean)<br>\nDiscard inconsistent columns count; disabled if null, false or empty; default to <code class=\"language-text\">false</code>.</li>\n<li><code class=\"language-text\">record_delimiter</code> (chars|array)<br>\nOne or multiple characters used to delimit records; defaults to auto discovery if not provided. Supported auto discovery methods are Linux (\"\\n\"), Apple (\"\\r\") and Windows (\"\\r\\n\") row delimiters.</li>\n<li><code class=\"language-text\">rtrim</code> (boolean)<br>\nIf <code class=\"language-text\">true</code>, ignore whitespace immediately preceding the delimiter (i.e. right-trim all fields). Defaults to <code class=\"language-text\">false</code>.  Does not remove whitespace in a quoted field.</li>\n<li><code class=\"language-text\">skip_empty_lines</code> (boolean)<br>\nDon't generate records for empty lines (line matching <code class=\"language-text\">/\\s*/</code>), defaults to <code class=\"language-text\">false</code>.</li>\n<li><code class=\"language-text\">skip_lines_with_error</code> (boolean)<br>\nSkip a line with error found inside and directly go process the next line.</li>\n<li><code class=\"language-text\">skip_lines_with_empty_values</code> (boolean)<br>\nDon't generate records for lines containing empty column values (column matching <code class=\"language-text\">/\\s*/</code>), defaults to <code class=\"language-text\">false</code>.</li>\n<li><code class=\"language-text\">to</code>, (number)<br>\nStop handling records after the requested number of records.</li>\n<li><code class=\"language-text\">to_line</code>, (number)<br>\nStop handling records after the requested line number.</li>\n<li><code class=\"language-text\">trim</code> (boolean)<br>\nIf <code class=\"language-text\">true</code>, ignore whitespace immediately around the delimiter. Defaults to <code class=\"language-text\">false</code>. Does not remove whitespace in a quoted field.</li>\n</ul>\n<h2 id=\"choose-your-style\"><a href=\"#choose-your-style\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Choose your style</h2>\n<p>The code uses snake case as the conventional style for function and variable names. In snake case, all letters are lowercase and underscores separate words. It is however accepted to provide options in camel case. Thus, <code class=\"language-text\">record_delimiter</code> and <code class=\"language-text\">recordDelimiter</code> are equivalent when initialising a new parser. The option will be converted into snake case and exposed as such. For example, in case you need to access the <code class=\"language-text\">record_delimiter</code> option, use <code class=\"language-text\">generate().options.record_delimiter</code> and not <code class=\"language-text\">generate().options.recordDelimiter</code>. Choose the case which best fit your coding style.</p>","frontmatter":{"title":"Options","description":"Options relative to the csv-parse package","keywords":["csv","parse","options","delimiter","columns","comment","escape"]},"fields":{"edit_url":"https://github.com/adaltas/node-csv-docs/edit/master/src/md/parse/options.md","slug":"/parse/options/"}}},"pageContext":{}}